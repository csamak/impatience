image: haskell:latest

variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack"

cache:
  paths:
    - .stack
    - .stack-work

stages:
  - build
  - test
  - release
  - deploy

build:
  stage: build
  script:
    - stack build

test:
  stage: test
  script:
    - stack test

image_build:
  stage: release
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTROY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master

deploy_image:
  stage: deploy
  image: alpine
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster nosebit --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USER" --password="$KUBE_PASSWORD"
    - kubectl config set-context default --cluster=nosebit --user=admin
    - kubectl config use-context default
    - kubectl set image deployment/impatience impatience="$CI_REGISTRY_IMAGE:latest"
  only:
    - master