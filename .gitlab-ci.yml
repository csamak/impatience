image: haskell:latest

variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack"

cache:
  key: primary
  paths:
    - .stack
    - .stack-work

stages:
  - build
  - test
  - release
  - deploy

build:
  stage: build
  script:
    - mkdir bin
    - stack install --local-bin-path ./bin
  artifacts:
    expire_in: 1 week
    paths:
      - bin/

test:
  stage: test
  script:
    - stack test

image_build:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  cache: {}
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:latest"
  dependencies:
    - build
  only:
    - master

deploy_image:
  stage: deploy
  image: alpine
  environment:
    name: dev
  cache: {}
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - cd deploycfg
    - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" dev.yml service.yml
    - sed -i "s/__IMAGE__/$(echo ${CI_REGISTRY_IMAGE}:latest | sed -e 's/\//\\\//g')/" dev.yml
    - kubectl apply -f dev.yml
    - kubectl apply -f service.yml
    - kubectl rollout status -f dev.yml
  only:
    - master