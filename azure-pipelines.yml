variables:
  tag: '$(Build.BuildId)'

stages:
- stage: BuildTest
  displayName: Build and Test
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - script: |
        curl https://nixos.org/nix/install | sh
      displayName: Install Nix
    - script: |
        source ~/.nix-profile/etc/profile.d/nix.sh
        # lower jobs after https://bazel.build/roadmaps/remote-execution.html#async-action-execution
        bazel build -j 100 --remote_cache=$(remoteCache) //app:impatience-exe
      displayName: Build server binary
    - script: |
        source ~/.nix-profile/etc/profile.d/nix.sh
        bazel build -j 100 --remote_cache=$(remoteCache) //:impatience.tar
      displayName: Build container
    - publish: bazel-bin/app/impatience-exe
      artifact: exe
    - publish: bazel-bin/impatience.tar
      artifact: image
    - publish: deploycfg
      artifact: manifests
    - script: |
        bazel test -j 100 --remote_cache=$(remoteCache) --test_summary=detailed --test_output=all //...:all
      displayName: Execute Tests # (w/coverage)
    # TODO: publish test results
    - script: |
        bazel test -j 100 --remote_cache=$(remoteCache) --test_summary=detailed --test_output=all //test:container_command_tests
      displayName: Execute Tests In Image
- stage: Push
  displayName: Push images
  dependsOn: BuildTest
  jobs:
  - job: Push
    displayName: Push image to registry
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - download: current
      artifact: image
    - script: |
        docker load -i $(Pipeline.Workspace)/image/impatience.tar
        docker tag bazel:impatience csamak/impatience:$(tag)
        docker tag bazel:impatience csamak/impatience:$(Build.SourceBranchName)
      displayName: Load Image
    - task: Docker@2
      displayName: Push Image
      inputs:
        containerRegistry: 'impatienceregistry'
        repository: 'csamak/impatience'
        command: 'push'
        tags: |
          $(tag)
          $(Build.SourceBranchName)
