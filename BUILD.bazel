load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@package_bundle//file:packages.bzl", "packages")
load("@rules_haskell//haskell:defs.bzl", "haskell_repl")

package(default_visibility = ["//visibility:public"])

exports_files(["impatience.dhall"])

# since build --strip=always doesn't do this.
genrule(
    name = "stripped",
    srcs = ["//app:impatience-exe"],
    outs = ["impatience-uncompressed-exe"],
    cmd = "strip -o $@ $<",
)

genrule(
    name = "compressed",
    srcs = ["//:stripped"],
    outs = ["impatience-exe"],
    # cp avoids exception
    cmd = "cp $< temp-exe && upx -o $@ temp-exe && rm temp-exe",
)

container_image(
    name = "impatience",
    base = "@base_image//image",
    debs = [
        packages["libcom-err2"],
        packages["libffi6"],
        packages["libgcc1"],
        packages["libgmp10"],
        packages["libgnutls30"],
        packages["libgssapi-krb5-2"],
        packages["libhogweed4"],
        packages["libidn2-0"],
        packages["libk5crypto3"],
        packages["libkeyutils1"],
        packages["libkrb5-3"],
        packages["libkrb5support0"],
        packages["libldap-2.4-2"],
        packages["libnettle6"],
        packages["libp11-kit0"],
        packages["libpq5"],
        packages["libsasl2-2"],
        packages["libstdc++6"],
        packages["libtasn1-6"],
        packages["libtinfo5"],  # if built on stretch
        packages["libtinfo6"],
        packages["libunistring2"],
        packages["zlib1g"],
    ],
    entrypoint = ["/impatience-exe"],
    files = [
        ":impatience.dhall",
        "//:compressed",
    ],
)

haskell_repl(
    name = "hie-bios",
    testonly = 1,  # need to get test deps too
    collect_data = False,
    deps = [
        "//app:impatience-exe",
        "//test:impatience_server_test",
    ],
)
